@using static WebApp.Endpoints.ToDoItemAddRow
@using static WebApp.Endpoints.ToDoUpdate

<div id="@WrapperId(Model.Id)">
    @if (Model.ToDoItems.Count == 0)
    {
        Model.ToDoItems.Add(new());
    }

    @for (int index = 0; index < Model.ToDoItems.Count; index++)
    {
        var toDoItem = Model.ToDoItems[index];

        var toDoItemFieldName = $"{nameof(ToDoDto.ToDoItems)}[{index}]";

        var checkedAttribute = toDoItem.IsCompleted
            ? new Dictionary<string, object?> { { "value", "true" }, { "checked", "" } }
            : new Dictionary<string, object?> { { "value", "true" } };

        <input type="hidden" name="@($"{toDoItemFieldName}.{nameof(ToDoItemDto.Id)}")" value="@toDoItem.Id" />

        <div class="input-group">
            <div class="input-group-text">
                <input @attributes="checkedAttribute" type="checkbox" name="@($"{toDoItemFieldName}.{nameof(ToDoItemDto.IsCompleted)}")" class="form-check-input mt-0">
            </div>
            <input type="text" name="@($"{toDoItemFieldName}.{nameof(ToDoItemDto.Description)}")" value="@toDoItem.Description" class="form-control">
            
            @if (Model.ToDoItems.Count > 1)
            {
                <div class="input-group-text">
                    <button @attributes="@HtmxForm.DefaultHtmxAttributes($"{Constants.ToDoItemDeleteRowPath}/{index}")" type="button" class="btn btn-outline-danger">
                        <SvgDashCircleDotted />
                    </button>
                </div>
            }
        </div>
        <ServerValidationMessage For="@($"{toDoItemFieldName}.{nameof(ToDoItemDto.Description)}")" ServerErrors="ServerErrors" />
    }

    <div class="container text-center mt-3">
        <div class="row">
            <div class="col">
                <button @attributes="@HtmxForm.DefaultHtmxAttributes(Constants.ToDoItemAddRowPath)" type="button" class="btn btn-outline-primary">
                    Add Row <SvgPlusCircleDotted />
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public ToDoDto Model { get; set; } = new();

    [Parameter]
    public Dictionary<string, HashSet<string>>? ServerErrors { get; set; }

    public static string WrapperId(Guid toDoId) => $"toDoItems_{toDoId}";
}
